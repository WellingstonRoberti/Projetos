/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import academico.Aluno;
import academico.Curso;
import academico.Matricula;
import com.itextpdf.io.font.FontConstants;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import java.awt.Desktop;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Junim Roberti
 */
public class Menu extends javax.swing.JFrame {


    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
    }
    Aluno aluno = new Aluno();
    Matricula matricula = new Matricula();
    Curso curso = new Curso();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Menu = new javax.swing.JTabbedPane();
        Cadastrar = new javax.swing.JPanel();
        CadastrarAluno = new javax.swing.JButton();
        CadastrarCurso = new javax.swing.JButton();
        CadastrarMatricula = new javax.swing.JButton();
        Imprimir = new javax.swing.JPanel();
        ImprimirAluno = new javax.swing.JButton();
        ImprimirCurso = new javax.swing.JButton();
        ImprimirMatricula = new javax.swing.JButton();
        ImportareExportar = new javax.swing.JPanel();
        Importar = new javax.swing.JButton();
        Exportar = new javax.swing.JButton();
        relatorio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Menu.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()), "Menu"));

        Cadastrar.setBackground(new java.awt.Color(255, 255, 255));

        CadastrarAluno.setText("Cadastrar Aluno");
        CadastrarAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarAlunoActionPerformed(evt);
            }
        });

        CadastrarCurso.setText("Cadastrar Curso");
        CadastrarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarCursoActionPerformed(evt);
            }
        });

        CadastrarMatricula.setText("Cadastrar Matricula");
        CadastrarMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarMatriculaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CadastrarLayout = new javax.swing.GroupLayout(Cadastrar);
        Cadastrar.setLayout(CadastrarLayout);
        CadastrarLayout.setHorizontalGroup(
            CadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CadastrarLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(CadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CadastrarCurso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CadastrarAluno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CadastrarMatricula, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                .addGap(50, 50, 50))
        );
        CadastrarLayout.setVerticalGroup(
            CadastrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CadastrarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CadastrarAluno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CadastrarCurso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CadastrarMatricula)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Menu.addTab("Cadastrar", Cadastrar);

        Imprimir.setBackground(new java.awt.Color(255, 255, 255));

        ImprimirAluno.setText("Imprimir Aluno");
        ImprimirAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirAlunoActionPerformed(evt);
            }
        });

        ImprimirCurso.setText("Imprimir Curso");
        ImprimirCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirCursoActionPerformed(evt);
            }
        });

        ImprimirMatricula.setText("Imprimir Matricula");
        ImprimirMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirMatriculaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ImprimirLayout = new javax.swing.GroupLayout(Imprimir);
        Imprimir.setLayout(ImprimirLayout);
        ImprimirLayout.setHorizontalGroup(
            ImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImprimirLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(ImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ImprimirMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ImprimirCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ImprimirAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
        ImprimirLayout.setVerticalGroup(
            ImprimirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImprimirLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ImprimirAluno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ImprimirCurso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ImprimirMatricula)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Menu.addTab("Imprimir", Imprimir);

        ImportareExportar.setBackground(new java.awt.Color(255, 255, 255));

        Importar.setText("Importar");
        Importar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportarActionPerformed(evt);
            }
        });

        Exportar.setText("Exportar");
        Exportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportarActionPerformed(evt);
            }
        });

        relatorio.setText("Relat√≥rio");
        relatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ImportareExportarLayout = new javax.swing.GroupLayout(ImportareExportar);
        ImportareExportar.setLayout(ImportareExportarLayout);
        ImportareExportarLayout.setHorizontalGroup(
            ImportareExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImportareExportarLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(ImportareExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(relatorio)
                    .addComponent(Exportar)
                    .addComponent(Importar))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        ImportareExportarLayout.setVerticalGroup(
            ImportareExportarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ImportareExportarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Importar)
                .addGap(11, 11, 11)
                .addComponent(Exportar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(relatorio)
                .addContainerGap())
        );

        Menu.addTab("Importar/Exportar", ImportareExportar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Menu)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Menu)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CadastrarAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarAlunoActionPerformed
        // TODO add your handling code here:
        CadastrarAluno frame = new CadastrarAluno(aluno);
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(frame.DISPOSE_ON_CLOSE);
        frame.setVisible(true);
    }//GEN-LAST:event_CadastrarAlunoActionPerformed

    private void CadastrarMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarMatriculaActionPerformed
        // TODO add your handling code here:
        CadastrarMatricula frame = new CadastrarMatricula(matricula, aluno, curso);
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(frame.DISPOSE_ON_CLOSE);
        frame.setVisible(true);
    }//GEN-LAST:event_CadastrarMatriculaActionPerformed

    private void ImprimirCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirCursoActionPerformed
        // TODO add your handling code here:
        ImprimirCurso frame = new ImprimirCurso(curso);
        frame.imprimirCurso();
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(frame.DISPOSE_ON_CLOSE);
        frame.setVisible(true);
    }//GEN-LAST:event_ImprimirCursoActionPerformed

    private void CadastrarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarCursoActionPerformed
        // TODO add your handling code here:
        CadastrarCurso frame = new CadastrarCurso(curso);
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(frame.DISPOSE_ON_CLOSE);
        frame.setVisible(true);
    }//GEN-LAST:event_CadastrarCursoActionPerformed

    private void ImprimirAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirAlunoActionPerformed
        // TODO add your handling code here
        ImprimirAluno frame = new ImprimirAluno(aluno);
        frame.imprimirAluno();
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(frame.DISPOSE_ON_CLOSE);
        frame.setVisible(true);
    }//GEN-LAST:event_ImprimirAlunoActionPerformed

    private void ImprimirMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirMatriculaActionPerformed
        // TODO add your handling code here:
        ImprimirMatricula frame = new ImprimirMatricula(matricula,aluno,curso);
        frame.imprimirMatricula();
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(frame.DISPOSE_ON_CLOSE);
        frame.setVisible(true);
    }//GEN-LAST:event_ImprimirMatriculaActionPerformed
        String path = "D:/Documentos/2¬∫ periodo - 2017/LPS/Academico/Aluno.csv";
        String path1 = "D:/Documentos/2¬∫ periodo - 2017/LPS/Academico/Curso.csv";
        String path2 = "D:/Documentos/2¬∫ periodo - 2017/LPS/Academico/Matricula.csv";
    private void ExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportarActionPerformed
        // TODO add your handling code here:
        try{
            File file = new File(path);
            FileWriter fileWriter = new FileWriter(file, true);
            BufferedWriter bf = new BufferedWriter(fileWriter);
            for(int i = 0; i < aluno.getArrayAluno().size(); i++){
                bf.write(aluno.getArrayAluno().get(i).getCodigo() + ";");
                bf.write(aluno.getArrayAluno().get(i).getNome() + ";");
                bf.write(aluno.getArrayAluno().get(i).getCpf() + ";\n");
                bf.flush();
            }
            bf.close();
        }catch(IOException e){
            System.out.println("deu nao!");
        }
        try{
            File file = new File(path1);
            FileWriter fileWriter = new FileWriter(file, true);
            BufferedWriter bf = new BufferedWriter(fileWriter);
            for(int i = 0; i < curso.getArrayCurso().size(); i++){
                bf.write(curso.getArrayCurso().get(i).getCodigo() + ";");
                bf.write(curso.getArrayCurso().get(i).getNome() + ";");
                bf.write(curso.getArrayCurso().get(i).getCargaHoraria()+ ";\n");
                bf.flush();
            }
            bf.close();
        }catch(IOException e){
            System.out.println("deu nao!");
        }
        try{
            File file = new File(path2);
            FileWriter fileWriter = new FileWriter(file, true);
            BufferedWriter bf = new BufferedWriter(fileWriter);
            for(int i = 0; i < matricula.getArrayMatricula().size(); i++){
                bf.write(matricula.getArrayMatricula().get(i).getNumero() + ";");
                bf.write(matricula.getArrayMatricula().get(i).getData()+ ";");
                bf.write(matricula.getArrayMatricula().get(i).getCodAluno()+ ";");
                bf.write(matricula.getArrayMatricula().get(i).getCodCurso()+ ";\n");
                bf.flush();
            }
            bf.close();
        }catch(IOException e){
            System.out.println("deu nao!");
        }
    }//GEN-LAST:event_ExportarActionPerformed

    private void ImportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportarActionPerformed
        // TODO add your handling code here:
        try{
            File reader = new File(path);
            FileReader fileReader = new FileReader(reader);
            BufferedReader bf = new BufferedReader(fileReader);
            aluno.apagar();
            for(int i = 0; i < reader.length(); i++){
                String aux = bf.readLine();
                if(";;".equals(aux))
                    break;
                Aluno aluno1 = new Aluno();
                String[] aux2 = aux.split(";");
                aluno1.lerDadosAluno(aluno1, aux2[2], aux2[0], aux2[1]);
                aluno.setArrayAluno(aluno1);
            }
            bf.close();
        }catch(IOException e){
            System.out.println("deu nao!");
        }
        try{
            File reader = new File(path);
            FileReader fileReader = new FileReader(reader);
            BufferedReader bf = new BufferedReader(fileReader);
            curso.apagar();
            for(int i = 0; i < reader.length(); i++){
                String aux = bf.readLine();
                if(";;".equals(aux))
                    break;
                Curso curso1 = new Curso();
                String[] aux2 = aux.split(";");
                curso1.lerDadosCurso(curso1, aux2[0], aux2[1], aux2[2]);
                curso.setArrayCurso(curso1);
            }
            bf.close();
        }catch(IOException e){
            System.out.println("deu nao!");
        }
        try{
            File file1 = new File(path1);
            FileWriter fileWriter1 = new FileWriter(file1);
            fileWriter1.close();
            File file2 = new File(path2);
            FileWriter fileWriter2 = new FileWriter(file2);
            fileWriter2.close();
            File file = new File(path);
            FileWriter fileWriter = new FileWriter(file);
            fileWriter.close();
        }catch(IOException e){
            System.out.println("deu nao!");
        }
    }//GEN-LAST:event_ImportarActionPerformed

    private void relatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatorioActionPerformed
        try {
            // TODO add your handling code here:
            PdfWriter writer = new PdfWriter("Relatorio.pdf");
            PdfDocument pdf = new PdfDocument(writer);
            Document document = new Document(pdf);
            document.setMargins(20,20,20,20);
            document.setFont(PdfFontFactory.createFont(FontConstants.TIMES_ROMAN));
            Paragraph cabecalho1 = new Paragraph("Lista de Alunos");
            document.add(cabecalho1);
            Table table = new Table(3);
            table.addCell(new Cell().add(new Paragraph("Aluno")));
            table.addCell(new Cell().add(new Paragraph("Matricula")));
            table.addCell(new Cell().add(new Paragraph("Curso")));
            for(int i =0; i < matricula.getArrayMatricula().size();i++){
            table.addCell(new Cell().add(new Paragraph(aluno.getArrayAluno().get(i).getNome())));
            table.addCell(new Cell().add(new Paragraph(String.valueOf(matricula.getArrayMatricula().get(i).getNumero()))));
            table.addCell(new Cell().add(new Paragraph(curso.getArrayCurso().get(i).getNome())));
            }
            document.add(table);
            document.close();
            Desktop.getDesktop().open(new File("Relatorio.pdf"));
        } catch (IOException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_relatorioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Cadastrar;
    private javax.swing.JButton CadastrarAluno;
    private javax.swing.JButton CadastrarCurso;
    private javax.swing.JButton CadastrarMatricula;
    private javax.swing.JButton Exportar;
    private javax.swing.JButton Importar;
    private javax.swing.JPanel ImportareExportar;
    private javax.swing.JPanel Imprimir;
    private javax.swing.JButton ImprimirAluno;
    private javax.swing.JButton ImprimirCurso;
    private javax.swing.JButton ImprimirMatricula;
    private javax.swing.JTabbedPane Menu;
    private javax.swing.JButton relatorio;
    // End of variables declaration//GEN-END:variables
}
