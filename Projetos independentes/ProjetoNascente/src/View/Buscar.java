/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controle.CaptacaoControle;
import Controle.CurralControle;
import Controle.LancamentoControle;
import Controle.MicrobaciaControle;
import Controle.NascenteControle;
import Controle.ReservaLegalControle;
import Controle.UsoDiferenciadoControle;
import Modelo.Captacao;
import Modelo.Curral;
import Modelo.Lancamento;
import Modelo.Microbacia;
import Modelo.Nascentes;
import Modelo.ReservaLegal;
import Modelo.UsoDiferenciado;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import Utilitario.ButtonColumn;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author junim
 */
public class Buscar extends javax.swing.JFrame {

    /**
     * Creates new form Buscar
     */
    public Buscar() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("119572.png")).getImage());
        this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTBuscar = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusCycleRoot(false);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable);

        jButton1.setText("Sair");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Nascentes");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Captação");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Lançamento");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Curral");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Reserva Legal");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Uso do solo diferenciado");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Excluir");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 980, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jToggleButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 795, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    String OndeBuscar;
    public String simENao(Boolean a){
        String b;
        if(a == true){
            b = "Sim";
        }else{
            b= "Não";
        }
        return b;
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        OndeBuscar = "Nascentes";
        NascenteControle nascenteControle = new NascenteControle();
        MicrobaciaControle microbaciaControle = new MicrobaciaControle();
        ArrayList<Microbacia> microbacia = new ArrayList<Microbacia>();
        DefaultTableModel tableModel = (DefaultTableModel)jTable.getModel();          
        tableModel = new DefaultTableModel(new String[]{"Microbacia","Ponto","Data", "Propriedade", "Número", "Cercamento", "Raio", "Construções", "Observação", "APP", "Erosão", "Animais", "Distancia", "Invasores", "Descrição"},0);
        ArrayList<Nascentes> array = nascenteControle.Buscar();
        for(int i =0; i < array.size();i++){
            microbacia.add(microbaciaControle.Buscar(array.get(i).getIdMicrobacia()));
        }
        for(int i = 0; i < array.size();i++){           
        Object[] data = {microbacia.get(i).getNome(),microbacia.get(i).getPonto(),microbacia.get(i).getData(),microbacia.get(i).getPropriedade(),array.get(i).getNumero(),simENao(array.get(i).getCercamento()),array.get(i).getRaio(),simENao(array.get(i).getContrucao()),array.get(i).getObs(),array.get(i).getApp(),simENao(array.get(i).getErosao()),simENao(array.get(i).getAnimais()),array.get(i).getDistancia(),simENao(array.get(i).getInvasor()),array.get(i).getDescricao()};
        tableModel.addRow(data);
        }
        jTable.setModel(tableModel);
        ButtonColumn buttonColumn = new ButtonColumn(jTable, jTable.getColumnCount()-1);
        jTable.setRowHeight(25);
        jTable.getColumnModel().getColumn(jTable.getColumnCount()-1).setPreferredWidth(83);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        OndeBuscar = "Captacao";
        CaptacaoControle captacaoControle = new CaptacaoControle();
        MicrobaciaControle microbaciaControle = new MicrobaciaControle();
        ArrayList<Microbacia> microbacia = new ArrayList<Microbacia>();
        DefaultTableModel tableModel = (DefaultTableModel)jTable.getModel();          
        tableModel = new DefaultTableModel(new String[]{"Microbacia", "Ponto","Data", "Propriedade", "Número", "Tipo de Captação", "Número da Residência", "Número de Pessoas", "Descrição"},0);        
        ArrayList<Captacao> array = captacaoControle.Buscar();
        for(int i =0; i < array.size();i++){
            microbacia.add(microbaciaControle.Buscar(array.get(i).getIdMicrobacia()));
        }
        for(int i = 0; i < array.size();i++){           
        Object[] data = {microbacia.get(i).getNome(),microbacia.get(i).getPonto(),microbacia.get(i).getData(),microbacia.get(i).getPropriedade(),array.get(i).getNumero(), array.get(i).getTipo(),array.get(i).getResidencia(), array.get(i).getPessoas(), array.get(i).getDescricao()};
        tableModel.addRow(data);
        }
        jTable.setModel(tableModel);
        ButtonColumn buttonColumn = new ButtonColumn(jTable, jTable.getColumnCount()-1);
        jTable.setRowHeight(25);
        jTable.getColumnModel().getColumn(jTable.getColumnCount()-1).setPreferredWidth(10);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        OndeBuscar = "Lançamento";
        LancamentoControle lancamentoControle = new LancamentoControle();
        MicrobaciaControle microbaciaControle = new MicrobaciaControle();
        ArrayList<Microbacia> microbacia = new ArrayList<Microbacia>();
        DefaultTableModel tableModel = (DefaultTableModel)jTable.getModel();          
        tableModel = new DefaultTableModel(new String[]{"Microbacia", "Ponto","Data", "Propriedade", "Número", "Fossa", "Tipo de Fossa", "Sumidouro", "Curso d'água", "Esgoto", "Pessoas", "Criação", "Número de Animais", "Descrição"},0);
        ArrayList<Lancamento> array = lancamentoControle.Buscar();
        for(int i =0; i < array.size();i++){
            microbacia.add(microbaciaControle.Buscar(array.get(i).getIdMicrobacia()));
        }
        for(int i = 0; i < array.size();i++){           
        Object[] data = {microbacia.get(i).getNome(),microbacia.get(i).getPonto(),microbacia.get(i).getData(),microbacia.get(i).getPropriedade(),array.get(i).getNumero(), simENao(array.get(i).getFossa()),array.get(i).getTipo(), simENao(array.get(i).getSumidouro()), simENao(array.get(i).getCursodagua()), simENao(array.get(i).getEsgoto()), array.get(i).getPessoas(), simENao(array.get(i).getCriacao()), array.get(i).getAnimais(), array.get(i).getDescricao()};
        tableModel.addRow(data);
        }
        jTable.setModel(tableModel);
        ButtonColumn buttonColumn = new ButtonColumn(jTable, jTable.getColumnCount()-1);
        jTable.setRowHeight(25);
        jTable.getColumnModel().getColumn(4).setPreferredWidth(20);
        jTable.getColumnModel().getColumn(6).setPreferredWidth(45);
        jTable.getColumnModel().getColumn(7).setPreferredWidth(55);
        jTable.getColumnModel().getColumn(8).setPreferredWidth(20);
        jTable.getColumnModel().getColumn(9).setPreferredWidth(20);
        jTable.getColumnModel().getColumn(10).setPreferredWidth(20);
        jTable.getColumnModel().getColumn(jTable.getColumnCount()-1).setPreferredWidth(55);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        OndeBuscar = "Curral";
        CurralControle curralControle = new CurralControle();
        MicrobaciaControle microbaciaControle = new MicrobaciaControle();
        ArrayList<Microbacia> microbacia = new ArrayList<Microbacia>();
        DefaultTableModel tableModel = (DefaultTableModel)jTable.getModel();          
        tableModel = new DefaultTableModel(new String[]{"Microbacia", "Ponto","Data", "Propriedade", "Número", "Lançamento", "Número de Animais", "Higienização", "Descrição"},0);
        ArrayList<Curral> array = curralControle.Buscar();
        for(int i =0; i < array.size();i++){
            microbacia.add(microbaciaControle.Buscar(array.get(i).getIdMicrobacia()));
        }
        for(int i = 0; i < array.size();i++){           
        Object[] data = {microbacia.get(i).getNome(),microbacia.get(i).getPonto(),microbacia.get(i).getData(),microbacia.get(i).getPropriedade(),array.get(i).getNumero(), array.get(i).getLancamento(),array.get(i).getAnimais(), array.get(i).getHigienizacao(), array.get(i).getDescricao()};
        tableModel.addRow(data);
        }
        jTable.setModel(tableModel);
        ButtonColumn buttonColumn = new ButtonColumn(jTable, jTable.getColumnCount()-1);
        jTable.setRowHeight(25);
        jTable.getColumnModel().getColumn(2).setPreferredWidth(55);
        jTable.getColumnModel().getColumn(0).setPreferredWidth(90);        
        jTable.getColumnModel().getColumn(jTable.getColumnCount()-1).setPreferredWidth(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        OndeBuscar = "ReservaLegal";
        ReservaLegalControle reservaLegalControle = new ReservaLegalControle();
        MicrobaciaControle microbaciaControle = new MicrobaciaControle();
        ArrayList<Microbacia> microbacia = new ArrayList<Microbacia>();
        DefaultTableModel tableModel = (DefaultTableModel)jTable.getModel();          
        tableModel = new DefaultTableModel(new String[]{"Microbacia", "Ponto","Data", "Propriedade", "Cercamento", "Área", "Situação", "Erosão", "Animais", "Distancia", "Invasores", "Descrição"},0);
        ArrayList<ReservaLegal> array = reservaLegalControle.Buscar();
        for(int i =0; i < array.size();i++){
            microbacia.add(microbaciaControle.Buscar(array.get(i).getIdMicrobacia()));
        }
        for(int i = 0; i < array.size();i++){           
        Object[] data = {microbacia.get(i).getNome(),microbacia.get(i).getPonto(),microbacia.get(i).getData(),microbacia.get(i).getPropriedade(),simENao(array.get(i).getCercamento()), array.get(i).getArea(),array.get(i).getSituacao(), simENao(array.get(i).getErosao()), simENao(array.get(i).getAnimais()), array.get(i).getDistancia(), simENao(array.get(i).getInvasor()), array.get(i).getDescricao()};
        tableModel.addRow(data);
        }
        jTable.setModel(tableModel);
        ButtonColumn buttonColumn = new ButtonColumn(jTable, jTable.getColumnCount()-1);
        jTable.setRowHeight(25);
        jTable.getColumnModel().getColumn(jTable.getColumnCount()-1).setPreferredWidth(67);        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        OndeBuscar = "UsoDiferenciado";
        UsoDiferenciadoControle usoDiferenciadoControle = new UsoDiferenciadoControle();
        MicrobaciaControle microbaciaControle = new MicrobaciaControle();
        ArrayList<Microbacia> microbacia = new ArrayList<Microbacia>();
        DefaultTableModel tableModel = (DefaultTableModel)jTable.getModel();          
        tableModel = new DefaultTableModel(new String[]{"Microbacia", "Ponto","Data", "Propriedade", "Número", "Descrição"},0);
        ArrayList<UsoDiferenciado> array = usoDiferenciadoControle.Buscar();
        for(int i =0; i < array.size();i++){
            microbacia.add(microbaciaControle.Buscar(array.get(i).getIdMicrobacia()));
        }
        for(int i = 0; i < array.size();i++){           
        Object[] data = {microbacia.get(i).getNome(),microbacia.get(i).getPonto(),microbacia.get(i).getData(),microbacia.get(i).getPropriedade(),array.get(i).getNumero(), array.get(i).getDescricao()};
        tableModel.addRow(data);
        }
        jTable.setModel(tableModel);
        ButtonColumn buttonColumn = new ButtonColumn(jTable, jTable.getColumnCount()-1);
        jTable.setRowHeight(25);
        jTable.getColumnModel().getColumn(0).setPreferredWidth(180);
        jTable.getColumnModel().getColumn(1).setPreferredWidth(180);
        jTable.getColumnModel().getColumn(2).setPreferredWidth(180);
        jTable.getColumnModel().getColumn(3).setPreferredWidth(180);
        jTable.getColumnModel().getColumn(4).setPreferredWidth(122);
        jTable.getColumnModel().getColumn(jTable.getColumnCount()-1).setPreferredWidth(0);        
    }//GEN-LAST:event_jButton8ActionPerformed
public String trocar(String a){
    if("Sim".equals(a) || "sim".equals(a)){
        return "1";
    }else if("Não".equals(a) || "nao".equals(a) || "não".equals(a) || "Nao".equals(a)){
        return "0";
    }else{
        return a;
    }
}
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if("Nascentes".equals(OndeBuscar)){
            NascenteControle nascenteControle = new NascenteControle();
            MicrobaciaControle microbaciaControle = new MicrobaciaControle();
            DefaultTableModel modeloTabela = (DefaultTableModel)jTable.getModel();
            ArrayList<Nascentes> arrayList = nascenteControle.BuscarJtxt(trocar(jTBuscar.getText()));
            ArrayList<Microbacia> arrayMicro = microbaciaControle.BuscarJtxt(trocar(jTBuscar.getText()));
            if(!arrayList.isEmpty()){
                arrayMicro = microbaciaControle.buscarPeloCodigo(arrayList);
            }else if(!arrayMicro.isEmpty()){
                arrayList = nascenteControle.buscarPeloCodigo(arrayMicro);
            }
            arrayMicro.clear();
            if(!arrayList.isEmpty()){
                arrayMicro = microbaciaControle.buscarPeloCodigo(arrayList);
            }else if(!arrayMicro.isEmpty()){
                arrayList = nascenteControle.buscarPeloCodigo(arrayMicro);
            }            
            if(arrayList.isEmpty() && arrayMicro.isEmpty()){
                JOptionPane.showMessageDialog(null, "Nada Encontrado!!");
            }else{
                modeloTabela.setNumRows(0);
                for(int i = 0; i < arrayList.size();i++){           
                    Object[] data = {arrayMicro.get(i).getNome(),arrayMicro.get(i).getPonto(),arrayMicro.get(i).getData(),arrayMicro.get(i).getPropriedade(),arrayList.get(i).getNumero(),simENao(arrayList.get(i).getCercamento()),arrayList.get(i).getRaio(),simENao(arrayList.get(i).getContrucao()),arrayList.get(i).getObs(),arrayList.get(i).getApp(),simENao(arrayList.get(i).getErosao()),simENao(arrayList.get(i).getAnimais()),arrayList.get(i).getDistancia(),simENao(arrayList.get(i).getInvasor()),arrayList.get(i).getDescricao()};
                    modeloTabela.addRow(data);
                }
                jTable.setModel(modeloTabela);
            }
        }
        if("Captacao".equals(OndeBuscar)){
            CaptacaoControle captacaoControle = new CaptacaoControle();
            MicrobaciaControle microbaciaControle = new MicrobaciaControle();
            DefaultTableModel modeloTabela = (DefaultTableModel)jTable.getModel();
            ArrayList<Captacao> arrayList = captacaoControle.BuscarJtxt(trocar(jTBuscar.getText()));
            ArrayList<Microbacia> arrayMicro = microbaciaControle.BuscarJtxt(trocar(jTBuscar.getText()));
            if(!arrayList.isEmpty()){
                arrayMicro = microbaciaControle.buscarPeloCodigo1(arrayList);
            }else if(!arrayMicro.isEmpty()){
                arrayList = captacaoControle.buscarPeloCodigo(arrayMicro);
            }
            arrayMicro.clear();
                        if(!arrayList.isEmpty()){
                arrayMicro = microbaciaControle.buscarPeloCodigo1(arrayList);
            }else if(!arrayMicro.isEmpty()){
                arrayList = captacaoControle.buscarPeloCodigo(arrayMicro);
            }
            if(arrayList.isEmpty() && arrayMicro.isEmpty()){
                JOptionPane.showMessageDialog(null, "Nada Encontrado!!");
            }else{
                modeloTabela.setNumRows(0);
                for(int i = 0; i < arrayList.size();i++){           
                    Object[] data = {arrayMicro.get(i).getNome(),arrayMicro.get(i).getPonto(),arrayMicro.get(i).getData(),arrayMicro.get(i).getPropriedade(),arrayList.get(i).getNumero(), arrayList.get(i).getTipo(),arrayList.get(i).getResidencia(), arrayList.get(i).getPessoas(), arrayList.get(i).getDescricao()};
                    modeloTabela.addRow(data);
                }
                jTable.setModel(modeloTabela);
            }
        }
        if("Lançamento".equals(OndeBuscar)){
            LancamentoControle lancamentoControle = new LancamentoControle();
            MicrobaciaControle microbaciaControle = new MicrobaciaControle();
            DefaultTableModel modeloTabela = (DefaultTableModel)jTable.getModel();
            ArrayList<Lancamento> arrayList = lancamentoControle.BuscarJtxt(trocar(jTBuscar.getText()));
            ArrayList<Microbacia> arrayMicro = microbaciaControle.BuscarJtxt(trocar(jTBuscar.getText()));
            if(!arrayList.isEmpty()){
                arrayMicro = microbaciaControle.buscarPeloCodigo3(arrayList);
            }else if(!arrayMicro.isEmpty()){
                arrayList = lancamentoControle.buscarPeloCodigo(arrayMicro);
            }
            arrayMicro.clear();
            if(!arrayList.isEmpty()){
                arrayMicro = microbaciaControle.buscarPeloCodigo3(arrayList);
            }else if(!arrayMicro.isEmpty()){
                arrayList = lancamentoControle.buscarPeloCodigo(arrayMicro);
            }
            if(arrayList.isEmpty() && arrayMicro.isEmpty()){
                JOptionPane.showMessageDialog(null, "Nada Encontrado!!");
            }else{
                modeloTabela.setNumRows(0);
                for(int i = 0; i < arrayList.size();i++){           
                    Object[] data = {arrayMicro.get(i).getNome(),arrayMicro.get(i).getPonto(),arrayMicro.get(i).getData(),arrayMicro.get(i).getPropriedade(),arrayList.get(i).getNumero(), simENao(arrayList.get(i).getFossa()),arrayList.get(i).getTipo(), simENao(arrayList.get(i).getSumidouro()), simENao(arrayList.get(i).getCursodagua()), simENao(arrayList.get(i).getEsgoto()), arrayList.get(i).getPessoas(), simENao(arrayList.get(i).getCriacao()), arrayList.get(i).getAnimais(), arrayList.get(i).getDescricao()};
                    modeloTabela.addRow(data);
                }
                jTable.setModel(modeloTabela);
            }
        }
        if("Curral".equals(OndeBuscar)){
            CurralControle curralControle = new CurralControle();
            MicrobaciaControle microbaciaControle = new MicrobaciaControle();
            DefaultTableModel modeloTabela = (DefaultTableModel)jTable.getModel();
            ArrayList<Curral> arrayList = curralControle.BuscarJtxt(trocar(jTBuscar.getText()));
            ArrayList<Microbacia> arrayMicro = microbaciaControle.BuscarJtxt(trocar(jTBuscar.getText()));
            if(!arrayList.isEmpty()){
                arrayMicro = microbaciaControle.buscarPeloCodigo2(arrayList);
            }else if(!arrayMicro.isEmpty()){
                arrayList = curralControle.buscarPeloCodigo(arrayMicro);
            }
            arrayMicro.clear();
            if(!arrayList.isEmpty()){
                arrayMicro = microbaciaControle.buscarPeloCodigo2(arrayList);
            }else if(!arrayMicro.isEmpty()){
                arrayList = curralControle.buscarPeloCodigo(arrayMicro);
            }
            if(arrayList.isEmpty() && arrayMicro.isEmpty()){
                JOptionPane.showMessageDialog(null, "Nada Encontrado!!");
            }else{
                modeloTabela.setNumRows(0);
                for(int i = 0; i < arrayList.size();i++){           
                    Object[] data = {arrayMicro.get(i).getNome(),arrayMicro.get(i).getPonto(),arrayMicro.get(i).getData(),arrayMicro.get(i).getPropriedade(),arrayList.get(i).getNumero(), arrayList.get(i).getLancamento(),arrayList.get(i).getAnimais(), arrayList.get(i).getHigienizacao(), arrayList.get(i).getDescricao()};
                    modeloTabela.addRow(data);
                }
                jTable.setModel(modeloTabela);
            }
        }
        if("ReservaLegal".equals(OndeBuscar)){
            ReservaLegalControle reservaLegalControle = new ReservaLegalControle();
            MicrobaciaControle microbaciaControle = new MicrobaciaControle();
            DefaultTableModel modeloTabela = (DefaultTableModel)jTable.getModel();
            ArrayList<ReservaLegal> arrayList = reservaLegalControle.BuscarJtxt(trocar(jTBuscar.getText()));
            ArrayList<Microbacia> arrayMicro = microbaciaControle.BuscarJtxt(trocar(jTBuscar.getText()));
            if(!arrayList.isEmpty()){
                arrayMicro = microbaciaControle.buscarPeloCodigo4(arrayList);
            }else if(!arrayMicro.isEmpty()){
                arrayList = reservaLegalControle.buscarPeloCodigo(arrayMicro);
            }
            arrayMicro.clear();
            if(!arrayList.isEmpty()){
                arrayMicro = microbaciaControle.buscarPeloCodigo4(arrayList);
            }else if(!arrayMicro.isEmpty()){
                arrayList = reservaLegalControle.buscarPeloCodigo(arrayMicro);
            }
            if(arrayList.isEmpty() && arrayMicro.isEmpty()){
                JOptionPane.showMessageDialog(null, "Nada Encontrado!!");
            }else{
                modeloTabela.setNumRows(0);
                for(int i = 0; i < arrayList.size();i++){           
                    Object[] data = {arrayMicro.get(i).getNome(),arrayMicro.get(i).getPonto(),arrayMicro.get(i).getData(),arrayMicro.get(i).getPropriedade(),simENao(arrayList.get(i).getCercamento()), arrayList.get(i).getArea(),arrayList.get(i).getSituacao(), simENao(arrayList.get(i).getErosao()), simENao(arrayList.get(i).getAnimais()), arrayList.get(i).getDistancia(), simENao(arrayList.get(i).getInvasor()), arrayList.get(i).getDescricao()};
                    modeloTabela.addRow(data);
                }
                jTable.setModel(modeloTabela);
            }
        }
        if("UsoDiferenciado".equals(OndeBuscar)){
            UsoDiferenciadoControle usoDiferenciadoControle = new UsoDiferenciadoControle();
            MicrobaciaControle microbaciaControle = new MicrobaciaControle();
            DefaultTableModel modeloTabela = (DefaultTableModel)jTable.getModel();
            ArrayList<UsoDiferenciado> arrayList = usoDiferenciadoControle.BuscarJtxt(trocar(jTBuscar.getText()));
            ArrayList<Microbacia> arrayMicro = microbaciaControle.BuscarJtxt(trocar(jTBuscar.getText()));
            if(!arrayList.isEmpty()){
                arrayMicro = microbaciaControle.buscarPeloCodigo5(arrayList);
            }else if(!arrayMicro.isEmpty()){
                arrayList = usoDiferenciadoControle.buscarPeloCodigo(arrayMicro);
            }
            arrayMicro.clear();
            if(!arrayList.isEmpty()){
                arrayMicro = microbaciaControle.buscarPeloCodigo5(arrayList);
            }else if(!arrayMicro.isEmpty()){
                arrayList = usoDiferenciadoControle.buscarPeloCodigo(arrayMicro);
            }
            if(arrayList.isEmpty() && arrayMicro.isEmpty()){
                JOptionPane.showMessageDialog(null, "Nada Encontrado!!");
            }else{
                modeloTabela.setNumRows(0);
                for(int i = 0; i < arrayList.size();i++){           
                    Object[] data = {arrayMicro.get(i).getNome(),arrayMicro.get(i).getPonto(),arrayMicro.get(i).getData(),arrayMicro.get(i).getPropriedade(),arrayList.get(i).getNumero(), arrayList.get(i).getDescricao()};
                    modeloTabela.addRow(data);
                }
                jTable.setModel(modeloTabela);
            }
        }        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        MicrobaciaControle microbaciaControle = new MicrobaciaControle();
        microbaciaControle.delete(jTable.getValueAt(jTable.getSelectedRow(), 1));
        DefaultTableModel modeloTabela = (DefaultTableModel)jTable.getModel();
        modeloTabela.removeRow(jTable.getSelectedRow());
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Buscar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTBuscar;
    private javax.swing.JTable jTable;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
